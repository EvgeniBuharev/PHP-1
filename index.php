<html>
    <head>
		<title>PHP-1</title>
    </head>
		<body>
		<h1>PHP</h1>
		<p>1 Урок</p>
		Задание 3.
		<p>1.  var_dump( 3 / 1) =  <?php var_dump( 3 / 1)?>.  //Решает выражение и выводит результат с описанием. Целое число 3. </p> 
		<p>2.  var_dump( 1 / 3) =  <?php var_dump( 1 / 3)?>. //Аналогично предыдущему. Число с плавающей точкой 0.3 </p>
		<p>3.  var_dump( '20cats' + 40 ) =  <?php var_dump( '20cats' + 40 ) ?>. //Решает выражение, строку преобразует в подобное числу 40, 
		т.к. идёт сложение она заменяется на число 20 потому что это присутствует в строке. Результат Целое число 60. </p>
		<p>4.  var_dump( 18 % 4) =  <?php var_dump( 18 % 4)?>. //Деление по модулю. С моей базой образования это было не понятно, благо есть
		гугл.Результат целочисленный остаток от деления 2 целое число. </p>
		
		Задание 4.
		<p>1. echo($a = 2) =  <?php echo($a = 2)?>. //Переменной $a присвоено значение 2 </p>
		<p>2. $x = ($y = 12) - 8; echo $x = <?php $x = ($y = 12) - 8; echo $x ?>. //Переменной $x присвоен результат выражения 4. Так же в примере 
		переменной $y присвоено значение 12</p>
		<p> Значением выражения присваивания является результат манипуляций числами путём арифметических операторов в этих примерах,
		в других случаях на мой взгляд как и в целом присвоенным значением будет являться результат выражения.</p>
		
		Задание 5.
		<p>1. 1 == 1.0 =  <?php var_dump( 1 == 1.0)?>. // true сравниваются без учета типа чисел</p>
		<p>2. 1 === 1.0 = <?php var_dump( 1 === 1.0)?>. // false числа не равны по типу int и float</p>
		<p>3. '02' == 2 = <?php var_dump( '02' == 2)?>. //  true т.к. строка преобразуется по типу к числовому значению числа равны. 
		??Почему преобразуется в число, а не на оборот число в строку??</p>
		<p>4. '02' === 2 = <?php var_dump( '02' === 2)?>. // false полагаю что в данном случае преобразования не происходит и неравенство 
		сразу получается из-за типа данных</p>
		<p>5. '02' == '2' = <?php var_dump( '02' == '2')?>. //  думаю что преобразование в числа происходит и сравнивается по этому критерию, так как
		и по количеству байтов и по количеству символов в строке была бы разница или это не учитывается в сравнении?.</p>
		<p>6. '02' === '2' = <?php var_dump( '02' === '2')?>. // ??Стало интересно и решил добавить но объяснить не могу, по какому именно критерию 
		происходит сравнение, в задании 5.5 то же сомневаюсь??</p>
		
		Задание 6.
		<p> $x = true xor true; var_dump($x) = <?php $x = true xor true; var_dump($x); ?> // Узнал что есть ещё и логические операторы. Переменной $x присвоено
		значение выражения с логическим оператором xor, а функция var_dump выводит в поток результат этого выражения. Непонятно только одно причем здесь 
		boolean? Или это просто указывает на то, что выражение было решено по Булевой формуле с логическим оператором??</p>
		
		</body>		
</html>